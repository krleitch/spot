%input-shared {
  border: none;
  outline: none;
  box-sizing: border-box;
}

// Input with a full border
.input-border {
  @extend %input-shared;
  width: 300px;
  padding: 8px 12px;
  border-radius: 3px;
  margin: 6px 0px;
  border: 1px solid var(--input-border);
  background-color: var(--input-background);
  color: var(--input-text);
}
// touched, dirty and invalid
.input-border.ng-dirty.ng-invalid.ng-touched {
  color: var(--error);
  border: 1px solid var(--error);
}
// icon on right
.remove-right {
  border-right: none;
  border-top-right-radius: 0px;
  border-bottom-right-radius: 0px;
  width: 267px;
}
.input-border-icon-right {
  display: flex;
  padding: 6px 12px 5px 0px;
  border-top-right-radius: 3px;
  border-bottom-right-radius: 3px;
  margin: 6px 0px;
  border-top: 1px solid var(--input-border);
  border-right: 1px solid var(--input-border);
  border-bottom: 1px solid var(--input-border);
  background-color: var(--input-background);
}
.remove-right.ng-dirty.ng-invalid.ng-touched {
  border-right: none;
}
.remove-right.ng-dirty.ng-invalid.ng-touched + .input-border-icon-right {
  border-top: 1px solid var(--error);
  border-right: 1px solid var(--error);
  border-bottom: 1px solid var(--error);
}

// text input with a bottom border
.input-border-bottom {
  @extend %input-shared;
  width: 300px;
  padding: 8px 2px 2px 2px;
  margin-bottom: 6px;
  border-bottom: 1px solid var(--input-border);
  background-color: var(--container-background);
  color: var(--input-text);
}
// touched, dirty and invalid
.input-border-bottom.ng-dirty.ng-invalid.ng-touched {
  color: var(--error);
  border-bottom: 1px solid var(--error);
}
.input-border-bottom-sm {
  @extend %input-shared;
  width: 150px;
  padding: 8px 2px 2px 2px;
  margin-bottom: 6px;
  border-bottom: 1px solid var(--input-border);
  background-color: var(--container-background);
  color: var(--input-text);
}
// touched, dirty and invalid
.input-border-bottom-sm.ng-dirty.ng-invalid.ng-touched {
  color: var(--error);
  border-bottom: 1px solid var(--error);
}

// borderless
.input-borderless {
  @extend %input-shared;
  padding: 2px;
  background-color: var(--container-background);
  color: var(--input-text);
}
// touched, dirty and invalid
.input-border-less.ng-dirty.ng-invalid.ng-touched {
  color: var(--error);
}

// searches
.input-search-container {
  display: flex;
  align-items: center;
  box-sizing: border-box;
  width: calc(100% - 12px);
  padding: 8px 12px;
  border-radius: 10px;
  margin: 6px;
  background-color: var(--input-background);
  color: var(--input-text);
}

.input-search {
  border: none;
  outline: none;
  background-color: var(--input-background);
  flex: 1;
}

/*------------------------------------------------------------------*/
/*                             Checkbox                             */
/*------------------------------------------------------------------*/
.checkbox-container {
  display: block;
  position: relative;
  padding-left: 23px;
  margin-top: 2px;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.checkbox-container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 15px;
  width: 15px;
  border: 1px solid var(--input-border);
}

.checkbox-container:hover input ~ .checkmark {
  background-color: #eee;
}

/* When the checkbox is checked, add a blue background */
.checkbox-container input:checked ~ .checkmark {
  border: 1px solid var(--primary);
  background-color: var(--primary);
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: '';
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.checkbox-container input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.checkbox-container .checkmark:after {
  left: 5px;
  top: 2px;
  width: 2px;
  height: 8px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}
