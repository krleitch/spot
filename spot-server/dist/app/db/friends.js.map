{"version":3,"sources":["../../../src/app/db/friends.ts"],"names":["getFriends","getFriendRequests","addFriendRequest","acceptFriendRequest","declineFriendRequest","deleteFriendById","friendRequestExists","getFriendsExist","getPendingFriendRequests","uuid","query","accountId","date","limit","selectSql","values","Date","limitSql","sql","firstId","secondId","id","getFriendsById","friendId","senderId","receiverId","friendRequestId","v4","then","rows"],"mappings":"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","sourcesContent":["export default {\n  getFriends,\n  getFriendRequests,\n  addFriendRequest,\n  acceptFriendRequest,\n  declineFriendRequest,\n  deleteFriendById,\n  friendRequestExists,\n  getFriendsExist,\n  getPendingFriendRequests\n};\n\nimport uuid from 'uuid';\nimport { query } from '@db/mySql';\n\n// use a union because friends are a 1 row mutual relationship\nfunction getFriends(accountId: string, date: string, limit: string) {\n  const selectSql = `SELECT id, creation_date, username, confirmed_date FROM\n                (SELECT friends.id, friends.creation_date, friends.confirmed_date, accounts.username FROM friends\n                LEFT JOIN accounts ON friends.friend_id = accounts.id WHERE account_id = ? AND friends.confirmed_date IS NOT NULL\n                UNION\n                SELECT friends.id, friends.creation_date, friends.confirmed_date, accounts.username FROM friends\n                LEFT JOIN accounts ON friends.account_id = accounts.id WHERE friend_id = ? AND friends.confirmed_date IS NOT NULL) results\n                WHERE confirmed_date < ? ORDER BY confirmed_date DESC`;\n  let values = [accountId, accountId, new Date(date)];\n  let limitSql = '';\n  if (limit) {\n    limitSql = ` LIMIT ?`;\n    values = [accountId, accountId, new Date(date), limit];\n  }\n  const sql = selectSql + limitSql;\n\n  return query(sql, values);\n}\n\nfunction getFriendsExist(firstId: string, secondId: string) {\n  const sql = `SELECT * FROM \n                 (SELECT * FROM friends WHERE account_id = ? AND friend_id = ? AND confirmed_date IS NOT NULL\n                  UNION\n                  SELECT * FROM friends WHERE account_id = ? and friend_id = ? AND confirmed_date IS NOT NULL) results LIMIT 1`;\n  const values = [firstId, secondId, secondId, firstId];\n  return query(sql, values);\n}\n\n// delete friend\nfunction deleteFriendById(id: string, accountId: string) {\n  const sql = `DELETE FROM friends WHERE id = ? AND (account_id = ? OR friend_id = ?)`;\n  const values = [id, accountId, accountId];\n  return query(sql, values);\n}\n\n// friend requests, account_id is the one who sent the request\nfunction getFriendRequests(accountId: string) {\n  const sql = `SELECT friends.id, friends.creation_date, accounts.username FROM friends\n                LEFT JOIN accounts ON friends.account_id = accounts.id WHERE friend_id = ? AND friends.confirmed_date IS NULL`;\n  const values = [accountId];\n  return query(sql, values);\n}\n\n// return sent but not yet accepted\nfunction getPendingFriendRequests(accountId: string) {\n  const sql = `SELECT friends.id, friends.creation_date, accounts.username FROM friends\n                LEFT JOIN accounts ON friends.friend_id = accounts.id WHERE account_id = ? AND friends.confirmed_date IS NULL`;\n  const values = [accountId];\n  return query(sql, values);\n}\n\nfunction getFriendsById(id: string) {\n  const sql = `SELECT friends.id, friends.creation_date, a1.username as friend_username, a2.username as account_username FROM friends\n                LEFT JOIN accounts a1 ON friends.friend_id = a1.id\n                LEFT JOIN accounts a2 ON friends.account_id = a2.id WHERE friends.id = ?`;\n  const values = [id];\n  return query(sql, values);\n}\n\n// Check if you have a friend request from account friendId\nfunction friendRequestExists(friendId: string, accountId: string) {\n  const sql = `SELECT id, account_id FROM \n                (SELECT * FROM friends WHERE account_id = ? AND friend_id = ? AND confirmed_date IS NULL\n                UNION\n                SELECT * FROM friends WHERE account_id = ? and friend_id = ? AND confirmed_date IS NULL) results LIMIT 1`;\n  const values = [friendId, accountId, accountId, friendId];\n  return query(sql, values);\n}\n\nfunction addFriendRequest(senderId: string, receiverId: string) {\n  const friendRequestId = uuid.v4();\n  const sql = `Insert INTO friends (id, account_id, friend_id, creation_date, confirmed_date) VALUES (?, ?, ?, ?, ?)`;\n  const values = [friendRequestId, senderId, receiverId, new Date(), null];\n  return query(sql, values).then((rows: any) => {\n    return getFriendsById(friendRequestId);\n  });\n}\n\n// function deleteFriendRequestsByReceiverId(id: string, accountId: string) {\n//     var sql = `DELETE FROM friend_requests WHERE id = ? AND receiver_id = ?`;\n//     var values = [id, accountId];\n//     return query(sql, values);\n// }\n\nfunction acceptFriendRequest(id: string, accountId: string) {\n  const sql = `UPDATE friends SET confirmed_date = ? WHERE id = ? AND friend_id = ? AND confirmed_date IS NULL`;\n  const values = [new Date(), id, accountId];\n  return query(sql, values).then((rows: any) => {\n    return getFriendsById(id);\n  });\n}\n\nfunction declineFriendRequest(id: string, accountId: string) {\n  const sql = `DELETE FROM friends WHERE id = ? AND friend_id = ? AND confirmed_date IS NULL`;\n  const values = [id, accountId];\n  return query(sql, values);\n}\n"],"file":"friends.js"}