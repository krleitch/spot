{"version":3,"sources":["../../../src/app/db/tags.ts"],"names":["addTag","getTagsByCommentId","TaggedInCommentChain","uuid","query","accountId","commentId","offset","tagId","v4","sql","values","Date","then","rows","length"],"mappings":"AAAA,cAAe,CAAEA,MAAF,CAAUC,kBAAV,CAA8BC,oBAA9B,CAAf,CAEA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CACA,OAASC,KAAT,KAAsB,WAAtB,CAEA,QAASJ,CAAAA,MAAT,CACEK,SADF,CAEEC,SAFF,CAGEC,MAHF,CAIgB,CACd,KAAMC,CAAAA,KAAK,CAAGL,IAAI,CAACM,EAAL,EAAd,CACA,KAAMC,CAAAA,GAAG,CACP,6FADF,CAEA,KAAMC,CAAAA,MAAM,CAAG,CAACH,KAAD,CAAQH,SAAR,CAAmBC,SAAnB,CAA8B,GAAIM,CAAAA,IAAlC,CAA0CL,MAA1C,CAAf,CACA,MAAOH,CAAAA,KAAK,CAACM,GAAD,CAAMC,MAAN,CACb,CAED,QAASV,CAAAA,kBAAT,CAA4BK,SAA5B,CAA6D,CAC3D,KAAMI,CAAAA,GAAG,CAAG,6DAAZ,CACA,KAAMC,CAAAA,MAAM,CAAG,CAACL,SAAD,CAAf,CACA,MAAOF,CAAAA,KAAK,CAACM,GAAD,CAAMC,MAAN,CACb,CAGD,QAAST,CAAAA,oBAAT,CACEI,SADF,CAEED,SAFF,CAGoB,CAClB,KAAMK,CAAAA,GAAG,CAAI;AACf;AACA,uCAFE,CAGA,KAAMC,CAAAA,MAAM,CAAG,CAACL,SAAD,CAAYA,SAAZ,CAAuBD,SAAvB,CAAf,CACA,MAAOD,CAAAA,KAAK,CAACM,GAAD,CAAMC,MAAN,CAAL,CAAmBE,IAAnB,CAAyBC,IAAD,EAAe,CAC5C,MAAOA,CAAAA,IAAI,CAACC,MAAL,CAAc,CACtB,CAFM,CAGR","sourcesContent":["export default { addTag, getTagsByCommentId, TaggedInCommentChain };\n\nimport uuid from 'uuid';\nimport { query } from '@db/mySql';\n\nfunction addTag(\n  accountId: string,\n  commentId: string,\n  offset: number\n): Promise<any> {\n  const tagId = uuid.v4();\n  const sql =\n    'INSERT INTO tags (id, account_id, comment_id, creation_date, offset) VALUES (?, ?, ?, ?, ?)';\n  const values = [tagId, accountId, commentId, new Date(), offset];\n  return query(sql, values);\n}\n\nfunction getTagsByCommentId(commentId: string): Promise<any> {\n  const sql = 'SELECT * FROM tags WHERE comment_id = ? ORDER BY offset ASC';\n  const values = [commentId];\n  return query(sql, values);\n}\n\n// the commentId is the parent comment, not a reply\nfunction TaggedInCommentChain(\n  commentId: string,\n  accountId: string\n): Promise<boolean> {\n  const sql = `SELECT * FROM (SELECT id FROM comments WHERE comment_parent_id = ?) results \n                LEFT JOIN tags t ON t.comment_id = results.id \n                WHERE t.account_id = ?`;\n  const values = [commentId, commentId, accountId];\n  return query(sql, values).then((rows: any) => {\n    return rows.length > 0;\n  });\n}\n"],"file":"tags.js"}