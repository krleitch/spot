{"version":3,"sources":["../../../src/app/db/notifications.ts"],"names":["getNotificationByReceiverId","getNotificationById","addNotification","deleteNotificationById","addCommentNotification","setAllNotificationsSeen","setNotificationSeen","deleteAllNotificationsForAccount","getNotificationUnreadByReceiverId","addReplyNotification","uuid","query","receiverId","before","after","limit","sql","values","push","id","senderId","postId","notificationId","v4","Date","then","rows","commentId","replyId","accountId"],"mappings":"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","sourcesContent":["export default {\n  getNotificationByReceiverId,\n  getNotificationById,\n  addNotification,\n  deleteNotificationById,\n  addCommentNotification,\n  setAllNotificationsSeen,\n  setNotificationSeen,\n  deleteAllNotificationsForAccount,\n  getNotificationUnreadByReceiverId,\n  addReplyNotification\n};\n\nimport uuid from 'uuid';\nimport { query } from '@db/mySql';\n\nfunction getNotificationByReceiverId(\n  receiverId: string,\n  before: Date | null,\n  after: Date | null,\n  limit: number\n) {\n  let sql = `SELECT n.id, n.post_id, n.comment_id, n.reply_id, n.creation_date, n.seen, a.username,\n                p.image_src, p.image_nsfw, p.content, p.link, p.deletion_date, \n                c.link as comment_link, c.image_src as comment_image_src, c.image_nsfw as comment_image_nsfw, c.content as comment_content, c.account_id as account_id, c.deletion_date as comment_deletion_date,\n                r.image_src as reply_image_src, r.image_nsfw as reply_image_nsfw, r.content as reply_content, r.deletion_date as reply_deletion_date, r.link as reply_link\n                FROM notifications n\n                LEFT JOIN accounts a ON a.id = n.sender_id\n                LEFT JOIN posts p ON n.post_id = p.id\n                LEFT JOIN comments c ON n.comment_id = c.id\n                LEFT JOIN comments r ON n.reply_id = r.id \n                WHERE receiver_id = ? AND c.deletion_date IS NULL AND r.deletion_date IS NULL AND p.deletion_date IS NULL`;\n  const values: any = [receiverId];\n  if (after) {\n    sql += ` AND n.creation_date < ?`;\n    values.push(after);\n  }\n  if (before) {\n    sql += ` AND n.creation_date > ?`;\n    values.push(before);\n  }\n\n  sql += ` ORDER BY n.creation_date DESC LIMIT ?`;\n  values.push(limit);\n  return query(sql, values);\n}\n\nfunction getNotificationById(id: string) {\n  const sql = `SELECT * FROM notifications WHERE id = ?`;\n  const values = [id];\n  return query(sql, values);\n}\n\nfunction addNotification(senderId: string, receiverId: string, postId: string) {\n  const notificationId = uuid.v4();\n  const sql = `Insert INTO notifications (id, sender_id, receiver_id, creation_date, post_id, seen) VALUES (?, ?, ?, ?, ?, ?)`;\n  const values = [\n    notificationId,\n    senderId,\n    receiverId,\n    new Date(),\n    postId,\n    false\n  ];\n  return query(sql, values).then((rows: any) => {\n    return getNotificationById(notificationId);\n  });\n}\n\nfunction addCommentNotification(\n  senderId: string,\n  receiverId: string,\n  postId: string,\n  commentId: string\n) {\n  const notificationId = uuid.v4();\n  const sql = `Insert INTO notifications (id, sender_id, receiver_id, creation_date, post_id, comment_id, seen) VALUES (?, ?, ?, ?, ?, ?, ?)`;\n  const values = [\n    notificationId,\n    senderId,\n    receiverId,\n    new Date(),\n    postId,\n    commentId,\n    false\n  ];\n  return query(sql, values).then((rows: any) => {\n    return getNotificationById(notificationId);\n  });\n}\n\nfunction addReplyNotification(\n  senderId: string,\n  receiverId: string,\n  postId: string,\n  commentId: string,\n  replyId: string\n) {\n  const notificationId = uuid.v4();\n  const sql = `Insert INTO notifications (id, sender_id, receiver_id, creation_date, post_id, comment_id, reply_id, seen) VALUES (?, ?, ?, ?, ?, ?, ?, ?)`;\n  const values = [\n    notificationId,\n    senderId,\n    receiverId,\n    new Date(),\n    postId,\n    commentId,\n    replyId,\n    false\n  ];\n  return query(sql, values).then((rows: any) => {\n    return getNotificationById(notificationId);\n  });\n}\n\nfunction setNotificationSeen(notificationId: string, accountId: string) {\n  const sql = `UPDATE notifications SET seen = true WHERE id = ? AND receiver_id = ?`;\n  const values = [notificationId, accountId];\n  return query(sql, values);\n}\n\nfunction setAllNotificationsSeen(accountId: string) {\n  const sql = `UPDATE notifications SET seen = true WHERE receiver_id = ?`;\n  const values = [accountId];\n  return query(sql, values);\n}\n\nfunction deleteNotificationById(id: string, accountId: string) {\n  const sql = `DELETE FROM notifications WHERE id = ? AND receiver_id = ?`;\n  const values = [id, accountId];\n  return query(sql, values);\n}\n\nfunction deleteAllNotificationsForAccount(accountId: string) {\n  const sql = `DELETE FROM notifications WHERE receiver_id = ?`;\n  const values = [accountId];\n  return query(sql, values);\n}\n\nfunction getNotificationUnreadByReceiverId(accountId: string) {\n  const sql = `SELECT count(*) as unread \n                FROM notifications n\n                LEFT JOIN accounts a ON a.id = n.sender_id\n                LEFT JOIN posts p ON n.post_id = p.id\n                LEFT JOIN comments c ON n.comment_id = c.id\n                LEFT JOIN comments r ON n.reply_id = r.id \n                WHERE receiver_id = ? AND seen = false AND \n                c.deletion_date IS NULL AND r.deletion_date IS NULL AND p.deletion_date IS NULL `;\n  const values = [accountId];\n  return query(sql, values);\n}\n"],"file":"notifications.js"}