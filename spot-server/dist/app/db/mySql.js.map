{"version":3,"sources":["../../../src/app/db/mySql.ts"],"names":["mysql","db","createPool","host","user","password","database","charset","initDb","getConnection","err","console","log","query","sql","args","Promise","resolve","reject","results","closeDb","end","getDb"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,KAAMC,CAAAA,EAAE,CAAGD,KAAK,CAACE,UAAN,CAAiB,CAC1BC,IAAI,CAAE,WADoB,CAE1BC,IAAI,CAAE,MAFoB,CAG1BC,QAAQ,CAAE,UAHgB,CAI1BC,QAAQ,CAAE,MAJgB,CAK1BC,OAAO,CAAE,SALiB,CAAjB,CAAX,CASA,MAAO,SAASC,CAAAA,MAAT,EAAkB,CAEvBP,EAAE,CAACQ,aAAH,CAAkBC,GAAD,EAAc,CAC7B,GAAIA,GAAJ,CAAS,CACPC,OAAO,CAACC,GAAR,CAAY,2BAAZ,EACA,MACD,CACDD,OAAO,CAACC,GAAR,CAAY,iCAAZ,CACD,CAND,CAOD,CAGD,MAAO,SAASC,CAAAA,KAAT,CAAeC,GAAf,CAA4BC,IAA5B,CAAmE,CACxE,MAAO,IAAIC,CAAAA,OAAJ,CAAY,CAACC,OAAD,CAAUC,MAAV,GAAqB,CACtCjB,EAAE,CAACY,KAAH,CAASC,GAAT,CAAcC,IAAd,CAAoB,CAACL,GAAD,CAAWS,OAAX,GAA4B,CAC9C,GAAIT,GAAJ,CAAS,CACP,MAAOQ,CAAAA,MAAM,CAAC,CAACR,GAAD,CAAD,CACd,CACDO,OAAO,CAACE,OAAD,CACR,CALD,CAMD,CAPM,CAQR,CAGD,MAAO,SAASC,CAAAA,OAAT,EAAmB,CACxB,MAAO,IAAIJ,CAAAA,OAAJ,CAAY,CAACC,OAAD,CAAUC,MAAV,GAAqB,CACtCjB,EAAE,CAACoB,GAAH,CAAQX,GAAD,EAAc,CACnB,GAAIA,GAAJ,CAAS,CACP,MAAOQ,CAAAA,MAAM,CAACR,GAAD,CACd,CACDO,OAAO,CAAC,IAAD,CACR,CALD,CAMD,CAPM,CAQR,CAGD,MAAO,SAASK,CAAAA,KAAT,EAAiB,CACtB,MAAOrB,CAAAA,EACR","sourcesContent":["import mysql from 'mysql';\n\nconst db = mysql.createPool({\n  host: 'localhost',\n  user: 'root',\n  password: 'rootroot',\n  database: 'spot',\n  charset: 'utf8mb4'\n});\n\n// Initialize the db\nexport function initDb() {\n  // db.connect((err: any) => {\n  db.getConnection((err: any) => {\n    if (err) {\n      console.log('Error connecting to MySql');\n      return;\n    }\n    console.log('Connection established to MySql');\n  });\n}\n\n// Query the db with the sql string\nexport function query(sql: string, args: Array<any>): Promise<Array<any>> {\n  return new Promise((resolve, reject) => {\n    db.query(sql, args, (err: any, results: any) => {\n      if (err) {\n        return reject([err]);\n      }\n      resolve(results);\n    });\n  });\n}\n\n// Close the db\nexport function closeDb() {\n  return new Promise((resolve, reject) => {\n    db.end((err: any) => {\n      if (err) {\n        return reject(err);\n      }\n      resolve(true);\n    });\n  });\n}\n\n// return the db object\nexport function getDb() {\n  return db;\n}\n\n// export default {\n  // initDb,\n  // closeDb,\n  // getDb,\n  // query\n// };\n"],"file":"mySql.js"}