{"version":3,"sources":["../../src/app/main.ts"],"names":["express","app","bodyParser","Cors","rfs","morgan","path","posts","root","accounts","comments","notifications","friends","auth","admin","mySql","errorHandler","passport","authentication","locationService","authorization","roles","port","process","env","PORT","initDb","use","initialize","urlencoded","extended","json","accessLogStream","createStream","interval","join","__dirname","stream","optionalAuth","checkLocation","requiredAuth","checkRoleMiddleware","owner","errorMiddleware","listen","console","log"],"mappings":"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","sourcesContent":["// import 'module-alias/register.js';\n\n// import moduleAlias from 'module-alias';\n\n// console.log(__dirname + \"./build/app/routes\");\n\n// moduleAlias.addAliases({\n//   \"@models\": __dirname + \"../../../spot-commons/build/models\",\n//   \"@exceptions\": __dirname + \"../../../spot-commons/build/exceptions\",\n//   \"@constants\": __dirname + \"../../../spot-commons/build/constants\",\n//   \"@db\": __dirname + \"/db\",\n//   \"@routes\": __dirname + \"/routes\",\n//   \"@services\": __dirname + \"/services\",\n//   \"@helpers\": __dirname + \"/helpers\",\n//   \"@config\": __dirname + \"../config\"\n// });\n\nimport express from 'express';\nconst app = express();\n\nimport bodyParser from 'body-parser';\nimport Cors from 'cors';\nimport rfs from 'rotating-file-stream';\nimport morgan from 'morgan';\nimport path from 'path';\n\n// Routes\nimport posts from '@routes/posts';\nimport root from '@routes/root';\nimport accounts from '@routes/accounts';\nimport comments from '@routes/comments';\nimport notifications from '@routes/notifications';\nimport friends from '@routes/friends';\nimport auth from '@routes/authentication';\nimport admin from '@routes/admin';\n\n// Db\nimport * as mySql from '@db/mySql';\n// import mongo from '@db/mongo';\n\n// Utils\nimport errorHandler from '@helpers/errorHandler';\nimport passport from '@services/authentication/passport';\nimport authentication from '@services/authentication/authentication';\nimport locationService from '@services/locations';\nimport authorization from '@services/authorization/authorization';\nimport roles from '@services/authorization/roles';\n\nconst port = process.env.PORT || 3000;\n\nmySql.initDb();\n// mongo.initDb();\n\napp.use(passport.initialize());\n// app.use(passport.session());\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(Cors());\n\n// create a rotating write stream\nconst accessLogStream = rfs.createStream('access.log', {\n  interval: '1d', // rotate daily\n  path: path.join(__dirname, 'log')\n});\n\n// setup the logger\napp.use(morgan('combined', { stream: accessLogStream }));\n\n// Unprotected routes\napp.use('/', root);\napp.use('/auth', auth);\n\n// Optional auth, user may or may not be filled check req.authenticated\n// Only check location on posts and comments, only requests that send location details are verified\napp.use(\n  '/posts',\n  authentication.optionalAuth,\n  locationService.checkLocation,\n  posts\n);\napp.use(\n  '/comments',\n  authentication.optionalAuth,\n  locationService.checkLocation,\n  comments\n);\n\n// Required Auth\napp.use('/accounts', authentication.requiredAuth, accounts);\napp.use('/notifications', authentication.requiredAuth, notifications);\napp.use('/friends', authentication.requiredAuth, friends);\n\n// Required Auth + roles\napp.use(\n  '/admin',\n  authentication.requiredAuth,\n  authorization.checkRoleMiddleware([roles.owner, roles.admin]),\n  admin\n);\n\n// Error middleware\napp.use(errorHandler.errorMiddleware);\n\napp.listen(port, () => {\n  // if (err) {\n  //   console.log('Error listening: ', err);\n  //   mySql.closeDb().then(\n  //     () => {\n  //       console.log('Terminated connection to Db');\n  //     },\n  //     (err: any) => {\n  //       console.log('Error terminating connection to Db', err);\n  //     }\n  //   );\n  // }\n  console.log(`Server is listening on ${port}`);\n});\n\nexport {}"],"file":"main.js"}