import express from"express";const app=express();import bodyParser from"body-parser";import Cors from"cors";import rfs from"rotating-file-stream";import morgan from"morgan";import path from"path";import posts from"@routes/posts";import root from"@routes/root";import accounts from"@routes/accounts";import comments from"@routes/comments";import notifications from"@routes/notifications";import friends from"@routes/friends";import auth from"@routes/authentication";import admin from"@routes/admin";import*as mySql from"@db/mySql";import errorHandler from"@helpers/errorHandler";import passport from"@services/authentication/passport";import authentication from"@services/authentication/authentication";import locationService from"@services/locations";import authorization from"@services/authorization/authorization";import roles from"@services/authorization/roles";const port=process.env.PORT||3000;mySql.initDb();app.use(passport.initialize());app.use(bodyParser.urlencoded({extended:true}));app.use(bodyParser.json());app.use(Cors());const accessLogStream=rfs.createStream("access.log",{interval:"1d",path:path.join(__dirname,"log")});app.use(morgan("combined",{stream:accessLogStream}));app.use("/",root);app.use("/auth",auth);app.use("/posts",authentication.optionalAuth,locationService.checkLocation,posts);app.use("/comments",authentication.optionalAuth,locationService.checkLocation,comments);app.use("/accounts",authentication.requiredAuth,accounts);app.use("/notifications",authentication.requiredAuth,notifications);app.use("/friends",authentication.requiredAuth,friends);app.use("/admin",authentication.requiredAuth,authorization.checkRoleMiddleware([roles.owner,roles.admin]),admin);app.use(errorHandler.errorMiddleware);app.listen(port,()=>{console.log(`Server is listening on ${port}`)});export{};
//# sourceMappingURL=main.js.map