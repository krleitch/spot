{"version":3,"sources":["../../../src/app/routes/friends.ts"],"names":["express","router","Router","friends","accounts","rateLimiter","FriendsError","ErrorHandler","ERROR_MESSAGES","FRIENDS_ERROR_MESSAGES","MAIN","FRIENDS","authorization","roles","use","timeLog","req","res","next","get","genericFriendLimiter","accountId","user","id","date","query","limit","Number","getFriends","toString","then","rows","response","status","json","err","GetFriends","delete","friendId","params","deleteFriendById","DeleteFriend","getPendingFriendRequests","friendRequests","GetPendingFriendRequests","friendRequestId","DeletePendingFriendRequest","getFriendRequests","GetFriendRequests","post","catchAsync","username","body","checkRole","guest","FriendExistsError","getAccountByUsername","receiverId","undefined","UsernameError","NO_USER","SELF","exists","getFriendsExist","length","friendRequestExists","friendRequest","account_id","REQUEST_EXISTS","acceptFriendRequest","getAccountById","account","friend","addFriendRequest","friend_username","account_username","GENERIC","AcceptFriendRequest","declineFriendRequest","DeclineFriendRequest"],"mappings":"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","sourcesContent":["import express from 'express';\nconst router = express.Router();\n\n// db\nimport friends from '@db/friends';\nimport accounts from '@db/accounts';\n\n// ratelimiter\nimport rateLimiter from '@helpers/rateLimiter';\n\n// errors\nimport * as FriendsError from '@exceptions/friends';\nimport ErrorHandler from '@helpers/errorHandler';\nimport { ERROR_MESSAGES } from '@exceptions/messages';\nconst FRIENDS_ERROR_MESSAGES = ERROR_MESSAGES.MAIN.FRIENDS;\n\n// services\nimport authorization from '@services/authorization/authorization';\n\n// constants\nimport roles from '@services/authorization/roles';\n\nrouter.use(function timeLog(req: any, res: any, next: any) {\n  next();\n});\n\n// Get friends\nrouter.get(\n  '/',\n  rateLimiter.genericFriendLimiter,\n  function (req: any, res: any, next: any) {\n    const accountId = req.user.id;\n    const date = req.query.date;\n    const limit = Number(req.query.limit);\n\n    friends.getFriends(accountId, date, limit.toString()).then(\n      (rows: any) => {\n        const response = { friends: rows };\n        res.status(200).json(response);\n      },\n      (err: any) => {\n        return next(new FriendsError.GetFriends(500));\n      }\n    );\n  }\n);\n\n// delete a friend\nrouter.delete(\n  '/:friendId',\n  rateLimiter.genericFriendLimiter,\n  function (req: any, res: any, next: any) {\n    const accountId = req.user.id;\n    const friendId = req.params.friendId;\n\n    friends.deleteFriendById(friendId, accountId).then(\n      (rows: any) => {\n        const response = { friendId: friendId };\n        res.status(200).json(response);\n      },\n      (err: any) => {\n        return next(new FriendsError.DeleteFriend(500));\n      }\n    );\n  }\n);\n\n// get pending friend requests\nrouter.get(\n  '/pending',\n  rateLimiter.genericFriendLimiter,\n  function (req: any, res: any, next: any) {\n    const accountId = req.user.id;\n\n    friends.getPendingFriendRequests(accountId).then(\n      (rows: any) => {\n        const response = { friendRequests: rows };\n        res.status(200).json(response);\n      },\n      (err: any) => {\n        return next(new FriendsError.GetPendingFriendRequests(500));\n      }\n    );\n  }\n);\n\n// delete a pending friend\nrouter.delete(\n  '/pending/:friendId',\n  rateLimiter.genericFriendLimiter,\n  function (req: any, res: any, next: any) {\n    const accountId = req.user.id;\n    const friendId = req.params.friendId;\n\n    friends.deleteFriendById(friendId, accountId).then(\n      (rows: any) => {\n        const response = { friendRequestId: friendId };\n        res.status(200).json(response);\n      },\n      (err: any) => {\n        return next(new FriendsError.DeletePendingFriendRequest(500));\n      }\n    );\n  }\n);\n\n// get friend requests for the user\nrouter.get(\n  '/requests',\n  rateLimiter.genericFriendLimiter,\n  function (req: any, res: any, next: any) {\n    const accountId = req.user.id;\n\n    friends.getFriendRequests(accountId).then(\n      (rows: any) => {\n        const response = { friendRequests: rows };\n        res.status(200).json(response);\n      },\n      (err: any) => {\n        return next(new FriendsError.GetFriendRequests(500));\n      }\n    );\n  }\n);\n\n// send a friend request\nrouter.post(\n  '/requests',\n  rateLimiter.genericFriendLimiter,\n  ErrorHandler.catchAsync(async function (req: any, res: any, next: any) {\n    const accountId = req.user.id;\n    const { username } = req.body;\n\n    if (authorization.checkRole(req.user, [roles.guest])) {\n      return next(new FriendsError.FriendExistsError(500));\n    }\n\n    accounts.getAccountByUsername(username).then(\n        async (receiverId: any) => {\n          // No account with this username\n          if (receiverId[0] === undefined) {\n            return next(\n              new FriendsError.UsernameError(\n                FRIENDS_ERROR_MESSAGES.NO_USER,\n                400\n              )\n            );\n          }\n\n          // Cannot add yourself\n          if (receiverId[0].id === accountId) {\n            return next(\n              new FriendsError.UsernameError(FRIENDS_ERROR_MESSAGES.SELF, 400)\n            );\n          }\n\n          const exists = await friends.getFriendsExist(\n            accountId,\n            receiverId[0].id\n          );\n          if (exists.length > 0) {\n            return next(new FriendsError.FriendExistsError(500));\n          }\n\n          friends.friendRequestExists(receiverId[0].id, accountId).then(\n            (friendRequest: any) => {\n              // If a request already exists, then just accept it\n              if (friendRequest.length > 0) {\n                // you already sent a request\n                if (friendRequest[0].account_id === accountId) {\n                  return next(\n                    new FriendsError.UsernameError(\n                      FRIENDS_ERROR_MESSAGES.REQUEST_EXISTS,\n                      400\n                    )\n                  );\n                }\n\n                // accept the request\n                friends\n                  .acceptFriendRequest(friendRequest[0].id, accountId)\n                  .then(\n                    (rows: any) => {\n                      accounts.getAccountById(rows[0].account_id).then(\n                        (account: any) => {\n                          rows[0].username = account[0].username;\n                          const response = { friend: rows[0] };\n                          res.status(200).json(response);\n                        },\n                        (err: any) => {\n                          return next(new FriendsError.FriendExistsError(500));\n                        }\n                      );\n                    },\n                    (err: any) => {\n                      return next(new FriendsError.FriendExistsError(500));\n                    }\n                  );\n              } else {\n                friends.addFriendRequest(accountId, receiverId[0].id).then(\n                  (rows: any) => {\n                    rows[0].username = rows[0].friend_username;\n                    delete rows[0].friend_username;\n                    delete rows[0].account_username;\n                    const response = { friend: rows[0] };\n                    res.status(200).json(response);\n                  },\n                  (err: any) => {\n                    return next(\n                      new FriendsError.UsernameError(\n                        FRIENDS_ERROR_MESSAGES.GENERIC,\n                        500\n                      )\n                    );\n                  }\n                );\n              }\n            },\n            (err: any) => {\n              return next(new FriendsError.FriendExistsError(500));\n            }\n          );\n        },\n        (err: any) => {\n          return next(\n            new FriendsError.UsernameError(FRIENDS_ERROR_MESSAGES.GENERIC, 500)\n          );\n        }\n    );\n  })\n);\n\n// accept a friend request\nrouter.post(\n  '/requests/accept',\n  rateLimiter.genericFriendLimiter,\n  function (req: any, res: any, next: any) {\n    const accountId = req.user.id;\n    const { friendRequestId } = req.body;\n\n    if (authorization.checkRole(req.user, [roles.guest])) {\n      return next(new FriendsError.AcceptFriendRequest(500));\n    }\n\n    friends.acceptFriendRequest(friendRequestId, accountId).then(\n      (rows: any) => {\n        if (rows.length < 1) {\n          return next(new FriendsError.AcceptFriendRequest(500));\n        } else {\n          rows[0].username = rows[0].account_username;\n          delete rows[0].friend_username;\n          delete rows[0].account_username;\n          const response = { friend: rows[0] };\n          res.status(200).json(response);\n        }\n      },\n      (err: any) => {\n        return next(new FriendsError.AcceptFriendRequest(500));\n      }\n    );\n  }\n);\n\n// decline a friend request\nrouter.post(\n  '/requests/decline',\n  rateLimiter.genericFriendLimiter,\n  function (req: any, res: any, next: any) {\n    const accountId = req.user.id;\n    const { friendRequestId } = req.body;\n\n    friends.declineFriendRequest(friendRequestId, accountId).then(\n      (rows: any) => {\n        const response = {};\n        res.status(200).json(response);\n      },\n      (err: any) => {\n        return next(new FriendsError.DeclineFriendRequest(500));\n      }\n    );\n  }\n);\n\n// delete a friend request\n// router.delete('/requests/:friendRequestId', function (req: any, res: any) {\n\n//     const accountId = req.user.id;\n//     const friendRequestId = req.params.friendRequestId;\n\n//     friends.deleteFriendRequestsById(friendRequestId, accountId).then((rows: any) => {\n//         res.status(200).json({ friendRequest: rows[0] });\n//     }, (err: any) => {\n//         res.status(500).send('Error deleting friend request');\n//     });\n// });\n\nexport default router;\n"],"file":"friends.js"}