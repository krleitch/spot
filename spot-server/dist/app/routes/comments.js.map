{"version":3,"sources":["../../../src/app/routes/comments.ts"],"names":["express","router","Router","uuid","posts","reports","comments","accounts","tags","notifications","commentsService","imageService","authorization","singleUpload","upload","single","rateLimiter","CommentsError","AuthenticationError","ErrorHandler","COMMENTS_CONSTANTS","roles","config","use","timeLog","req","res","next","get","genericCommentLimiter","authenticated","accountId","user","id","before","query","Date","after","limit","Number","getCommentsActivity","then","activities","i","length","content","addTagsToContent","account_id","err","CommentActivity","response","activity","size","cursor","creation_date","status","json","catchAsync","postId","params","commentLink","comment","date","type","commentsArray","getCommentByLink","GetComments","parent_id","parent","getCommentById","getCommentByIdNoAccount","concat","rows","getCommentByPostId","getTags","taggedComments","numCommentsBefore","numCommentsAfter","lastDate","getNumberOfCommentsForPostBeforeDate","num","total","firstDate","getNumberOfCommentsForPostAfterDate","postCreator","getPostCreator","a","addProfilePicture","totalCommentsBefore","totalCommentsAfter","commentId","replyLink","reply","replies","GetReplies","getRepliesUpToDate","getRepliesByCommentId","getNumberOfRepliesForCommentAfterDate","totalRepliesAfter","post","createCommentLimiter","verified","VerifyError","checkRole","guest","AddComment","v4","filename","error","CommentImage","tagsList","location","JSON","parse","body","image","file","inRange","latitude","longitude","NotInRange","split","MAX_LINE_LENGTH","InvalidCommentLineLength","NoCommentContent","contentError","validContent","link","generateLink","imageNsfw","testNsfwLocal","predictNsfw","addComment","testNsfwLambda","predictNsfwLambda","result","Object","prototype","hasOwnProperty","call","StatusCode","payload","Payload","statusCode","predict","isNsfw","className","updateNsfw","index","account","getAccountByUsername","username","addTag","Math","min","offset","addCommentNotification","post_id","replyId","commentParentId","isTagged","TaggedInCommentChain","NotTagged","addReply","addReplyNotification","delete","DeleteComment","checkOwned","owned","owner","admin","deleteCommentById","deleteReplyByParentId","DeleteReply","parentId","put","LikeComment","likeComment","DislikeComment","dislikeComment","UnratedComment","unratedComment","LikeReply","DislikeReply","ReportComment","category","addCommentReport","send"],"mappings":"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","sourcesContent":["import express from 'express';\nconst router = express.Router();\n\nimport uuid from 'uuid';\n\n// db\nimport posts from '@db/posts';\nimport reports from '@db/reports';\nimport comments from '@db/comments';\nimport accounts from '@db/accounts';\nimport tags from '@db/tags';\nimport notifications from '@db/notifications';\n\n// services\nimport commentsService from '@services/comments';\nimport imageService from '@services/image';\nimport authorization from '@services/authorization/authorization';\nconst singleUpload = imageService.upload.single('image');\n\n// ratelimiter\nimport rateLimiter from '@helpers/rateLimiter';\n\n// errors\nimport * as CommentsError from '@exceptions/comments';\nimport * as AuthenticationError from '@exceptions/authentication';\nimport ErrorHandler from '@helpers/errorHandler';\n\n// constants\nimport { COMMENTS_CONSTANTS } from '@constants/comments';\nimport roles from '@services/authorization/roles';\n\n// config\nimport config from '@config/config';\n\nrouter.use(function timeLog(req: any, res: any, next: any) {\n  next();\n});\n\n// Get comment activity\nrouter.get(\n  '/activity',\n  rateLimiter.genericCommentLimiter,\n  function (req: any, res: any, next: any) {\n    // You must have an account to make a comment\n    if (!req.authenticated) {\n      return next(new AuthenticationError.AuthenticationError(401));\n    }\n\n    const accountId = req.user.id;\n    const before = req.query.before ? new Date(req.query.before) : null;\n    const after = req.query.after ? new Date(req.query.after) : null;\n    const limit = Number(req.query.limit);\n\n    comments.getCommentsActivity(accountId, before, after, limit).then(\n      async (activities: any) => {\n        for (let i = 0; i < activities.length; i++) {\n          try {\n            activities[i].content = await commentsService.addTagsToContent(\n              activities[i].id,\n              accountId,\n              activities[i].account_id,\n              activities[i].content\n            );\n          } catch (err) {\n            return next(new CommentsError.CommentActivity(500));\n          }\n        }\n        const response = {\n          activity: activities,\n          size: activities.length,\n          cursor: {\n            before: activities.length > 0 ? activities[0].creation_date : null,\n            after:\n              activities.length > 0\n                ? activities[activities.length - 1].creation_date\n                : null\n          }\n        };\n        res.status(200).json(response);\n      },\n      (err: any) => {\n        return next(new CommentsError.CommentActivity(500));\n      }\n    );\n  }\n);\n\n// Get all comments for a post\nrouter.get(\n  '/:postId',\n  ErrorHandler.catchAsync(async function (req: any, res: any, next: any) {\n    const postId = req.params.postId;\n\n    const commentLink = req.query.comment;\n    let date = req.query.date;\n    let type = req.query.type;\n    let limit = Number(req.query.limit);\n\n    // If comment id given, get that comment, then get limit-1 posts after that time stamp\n    // otherwise get limit timestamps from the given date\n\n    // Type means get before the date or after the date LIMIT #\n\n    // TYPE CAHNGES THE SQL SORT ASC / DESC\n\n    let commentsArray: any[] = [];\n\n    // If given a commentId we fetch that comment and everything after\n    if (commentLink) {\n      try {\n        const comment = await comments.getCommentByLink(\n          commentLink,\n          req.authenticated ? req.user.id : null\n        );\n        if (comment.length < 1) {\n          return next(new CommentsError.GetComments(500));\n        }\n\n        // if its a reply, get the parent creation_date\n        if (comment[0].parent_id) {\n          let parent;\n          if (req.authenticated) {\n            parent = await comments.getCommentById(\n              comment[0].parent_id,\n              req.user.id\n            );\n          } else {\n            parent = await comments.getCommentByIdNoAccount(\n              comment[0].parent_id\n            );\n          }\n          date = parent[0].creation_date;\n          commentsArray = commentsArray.concat(parent);\n        } else {\n          date = comment[0].creation_date;\n          commentsArray = commentsArray.concat(comment);\n        }\n        type = 'before';\n        limit -= 1;\n\n        const rows = await comments.getCommentByPostId(\n          postId,\n          date,\n          limit,\n          type,\n          req.authenticated ? req.user.id : null\n        );\n        commentsArray = commentsArray.concat(rows);\n      } catch (err) {\n        return next(new CommentsError.GetComments(500));\n      }\n    } else {\n      try {\n        const rows = await comments.getCommentByPostId(\n          postId,\n          date,\n          limit,\n          type,\n          req.authenticated ? req.user.id : null\n        );\n        commentsArray = commentsArray.concat(rows);\n      } catch (err) {\n        return next(new CommentsError.GetComments(500));\n      }\n    }\n\n    try {\n      await commentsService\n        .getTags(commentsArray, req.authenticated ? req.user.id : null)\n        .then((taggedComments: any) => {\n          commentsArray = taggedComments;\n        });\n    } catch (err) {\n      return next(new CommentsError.GetComments(500));\n    }\n\n    let numCommentsBefore = 0;\n    let numCommentsAfter = 0;\n    if (type == 'before') {\n      if (commentsArray.length > 0) {\n        const lastDate = commentsArray[commentsArray.length - 1].creation_date;\n        await comments\n          .getNumberOfCommentsForPostBeforeDate(postId, lastDate)\n          .then(\n            (num: any) => {\n              numCommentsBefore = num[0].total;\n            },\n            (err: any) => {\n              return next(new CommentsError.GetComments(500));\n            }\n          );\n        const firstDate = commentsArray[0].creation_date;\n        await comments\n          .getNumberOfCommentsForPostAfterDate(postId, firstDate)\n          .then(\n            (num: any) => {\n              numCommentsAfter = num[0].total;\n            },\n            (err: any) => {\n              return next(new CommentsError.GetComments(500));\n            }\n          );\n      }\n    }\n\n    try {\n      const postCreator = await posts.getPostCreator(postId);\n      const a = await commentsService.addProfilePicture(\n        commentsArray,\n        postCreator[0].account_id\n      );\n      commentsArray = a;\n    } catch (err) {\n      return next(new CommentsError.GetComments(500));\n    }\n\n    const response = {\n      postId: postId,\n      comments: commentsArray,\n      totalCommentsBefore: numCommentsBefore,\n      totalCommentsAfter: numCommentsAfter,\n      type: type\n    };\n    res.status(200).json(response);\n  })\n);\n\n// Get all replies for a comment on a post\nrouter.get(\n  '/:postId/:commentId',\n  ErrorHandler.catchAsync(async function (req: any, res: any, next: any) {\n    const postId = req.params.postId;\n    const commentId = req.params.commentId;\n    const replyLink = req.query.reply;\n    const date = req.query.date || null;\n    const limit = Number(req.query.limit);\n\n    let replies: any;\n\n    if (replyLink) {\n      try {\n        const comment = await comments.getCommentByLink(\n          replyLink,\n          req.authenticated ? req.user.id : null\n        );\n        if (comment.length < 1) {\n          return next(new CommentsError.GetReplies(500));\n        }\n\n        // If its a reply, get all replies up to this comment, otherwise get replies normally\n        if (comment[0].parent_id == commentId) {\n          // its a reply\n          replies = await comments.getRepliesUpToDate(\n            postId,\n            commentId,\n            comment[0].creation_date,\n            req.authenticated ? req.user.id : null\n          );\n        } else {\n          replies = await comments.getRepliesByCommentId(\n            postId,\n            commentId,\n            date,\n            limit,\n            req.authenticated ? req.user.id : null\n          );\n        }\n      } catch (err) {\n        return next(new CommentsError.GetReplies(500));\n      }\n    } else {\n      replies = await comments.getRepliesByCommentId(\n        postId,\n        commentId,\n        date,\n        limit,\n        req.authenticated ? req.user.id : null\n      );\n    }\n\n    await commentsService\n      .getTags(replies, req.authenticated ? req.user.id : null)\n      .then((taggedComments: any) => {\n        replies = taggedComments;\n      });\n\n    const lastDate =\n      replies.length > 0 ? replies[replies.length - 1].creation_date : null;\n    comments\n      .getNumberOfRepliesForCommentAfterDate(postId, commentId, lastDate)\n      .then(\n        (num: any) => {\n          posts.getPostCreator(postId).then(\n            async (postCreator: any) => {\n              await commentsService.addProfilePicture(\n                replies,\n                postCreator[0].account_id\n              );\n              const response = {\n                postId: postId,\n                commentId: commentId,\n                replies: replies,\n                totalRepliesAfter: num[0].total\n              };\n              res.status(200).json(response);\n            },\n            (err: any) => {\n              return next(new CommentsError.GetReplies(500));\n            }\n          );\n        },\n        (err: any) => {\n          return next(new CommentsError.GetReplies(500));\n        }\n      );\n  })\n);\n\n// Create a comment\nrouter.post(\n  '/:postId',\n  rateLimiter.createCommentLimiter,\n  ErrorHandler.catchAsync(async (req: any, res: any, next: any) => {\n    // You must have an account to make a comment\n    if (!req.authenticated) {\n      return next(new AuthenticationError.AuthenticationError(401));\n    }\n\n    // You must be verified to make a comment\n    if (!req.verified) {\n      return next(new AuthenticationError.VerifyError(400));\n    }\n\n    if (authorization.checkRole(req.user, [roles.guest])) {\n      return next(new CommentsError.AddComment(500));\n    }\n\n    const accountId = req.user.id;\n    const commentId = uuid.v4();\n    req.filename = commentId;\n\n    singleUpload(req, res, async function (error: any) {\n      // There was an error uploading the image\n      if (error) {\n        return next(new CommentsError.CommentImage(422));\n      }\n\n      const { content, tagsList, location } = JSON.parse(req.body.json);\n      const image = req.file ? req.file.location : null;\n      const postId = req.params.postId;\n\n      // Check you are in range of the post\n      const inRange = await commentsService.inRange(\n        postId,\n        location.latitude,\n        location.longitude\n      );\n      if (!inRange) {\n        return next(new CommentsError.NotInRange(400));\n      }\n\n      // check if line length matches\n      if (\n        content.split(/\\r\\n|\\r|\\n/).length > COMMENTS_CONSTANTS.MAX_LINE_LENGTH\n      ) {\n        return next(\n          new CommentsError.InvalidCommentLineLength(\n            400,\n            COMMENTS_CONSTANTS.MAX_LINE_LENGTH\n          )\n        );\n      }\n\n      // You must either have some text or an image\n      if (content.length === 0 && !image && tagsList.length === 0) {\n        return next(new CommentsError.NoCommentContent(400));\n      }\n\n      const contentError = commentsService.validContent(content);\n      if (contentError) {\n        return next(contentError);\n      }\n\n      const link = await commentsService.generateLink();\n      let imageNsfw = false;\n      if (config.testNsfwLocal && image) {\n        try {\n          imageNsfw = await imageService.predictNsfw(image);\n        } catch (err) {\n          // err\n        }\n      }\n\n      comments\n        .addComment(\n          commentId,\n          postId,\n          accountId,\n          content,\n          image,\n          imageNsfw,\n          link,\n          commentId\n        )\n        .then(\n          async (comment: any) => {\n            // async test nsfw\n            if (config.testNsfwLambda && image) {\n              imageService.predictNsfwLambda(image).then(\n                (result: any) => {\n                  if (\n                    Object.prototype.hasOwnProperty.call(\n                      result,\n                      'StatusCode'\n                    ) &&\n                    result.StatusCode === 200\n                  ) {\n                    const payload = JSON.parse(result.Payload);\n                    if (payload.statusCode === 200) {\n                      const predict = JSON.parse(payload.body);\n                      if (\n                        Object.prototype.hasOwnProperty.call(\n                          predict,\n                          'className'\n                        )\n                      ) {\n                        const isNsfw =\n                          predict.className === 'Porn' ||\n                          predict.className === 'Hentai';\n                        comments.updateNsfw(commentId, isNsfw);\n                      }\n                    }\n                  }\n                },\n                (err: any) => {}\n              );\n            }\n\n            // Add tags and send notifications\n            for (let index = 0; index < tagsList.length; index++) {\n              try {\n                const account = await accounts.getAccountByUsername(\n                  tagsList[index].username\n                );\n                await tags.addTag(\n                  account[0].id,\n                  comment[0].id,\n                  Math.min(tagsList[index].offset, content.length)\n                );\n                await notifications.addCommentNotification(\n                  accountId,\n                  account[0].id,\n                  comment[0].post_id,\n                  comment[0].id\n                );\n              } catch (err) {\n                return next(new CommentsError.AddComment(500));\n              }\n            }\n\n            // Add tags to our comment\n            await commentsService.getTags(comment, accountId).then(\n              (taggedComments: any) => {\n                comment = taggedComments;\n              },\n              (err: any) => {\n                return next(new CommentsError.AddComment(500));\n              }\n            );\n\n            // Add profile picture and send\n            posts.getPostCreator(postId).then(\n              async (postCreator: any) => {\n                await commentsService.addProfilePicture(\n                  comment,\n                  postCreator[0].account_id\n                );\n                res.status(200).json({ postId: postId, comment: comment[0] });\n              },\n              (err: any) => {\n                return next(new CommentsError.AddComment(500));\n              }\n            );\n          },\n          (err: any) => {\n            return next(new CommentsError.AddComment(500));\n          }\n        );\n    });\n  })\n);\n\n// Create a reply\nrouter.post(\n  '/:postId/:commentId',\n  rateLimiter.createCommentLimiter,\n  ErrorHandler.catchAsync(async function (req: any, res: any, next: any) {\n    if (!req.authenticated) {\n      return next(new AuthenticationError.AuthenticationError(401));\n    }\n\n    // You must be verified to make a reply\n    if (!req.verified) {\n      return next(new AuthenticationError.VerifyError(400));\n    }\n\n    if (authorization.checkRole(req.user, [roles.guest])) {\n      return next(new CommentsError.AddComment(500));\n    }\n\n    const accountId = req.user.id;\n    const replyId = uuid.v4();\n    req.filename = replyId;\n\n    singleUpload(req, res, async function (err: any) {\n      if (err) {\n        return next(new CommentsError.CommentImage(422));\n      }\n\n      const { content, tagsList, commentParentId, location } = JSON.parse(\n        req.body.json\n      );\n      const image = req.file ? req.file.location : null;\n\n      const postId = req.params.postId;\n      const commentId = req.params.commentId;\n\n      // Check you are either in range, or were tagged in the comment chain\n      const inRange = await commentsService.inRange(\n        postId,\n        location.latitude,\n        location.longitude\n      );\n      const isTagged = await tags.TaggedInCommentChain(\n        commentParentId,\n        accountId\n      );\n      if (!inRange && !isTagged) {\n        return next(new CommentsError.NotTagged(400));\n      } else if (!inRange) {\n        return next(new CommentsError.NotInRange(400));\n      }\n\n      // check if line length matches\n      if (\n        content.split(/\\r\\n|\\r|\\n/).length > COMMENTS_CONSTANTS.MAX_LINE_LENGTH\n      ) {\n        return next(\n          new CommentsError.InvalidCommentLineLength(\n            400,\n            COMMENTS_CONSTANTS.MAX_LINE_LENGTH\n          )\n        );\n      }\n\n      // You must either have some text or an image\n      if (content.length === 0 && !image && tagsList.length === 0) {\n        return next(new CommentsError.NoCommentContent(400));\n      }\n\n      const contentError = commentsService.validContent(content);\n      if (contentError) {\n        return next(contentError);\n      }\n\n      const link = await commentsService.generateLink();\n      let imageNsfw = false;\n      if (config.testNsfwLocal && image) {\n        try {\n          imageNsfw = await imageService.predictNsfw(image);\n        } catch (err) {\n          // err\n        }\n      }\n\n      comments\n        .addReply(\n          replyId,\n          postId,\n          commentId,\n          commentParentId,\n          accountId,\n          content,\n          image,\n          imageNsfw,\n          link\n        )\n        .then(\n          async (reply: any) => {\n            // async test nsfw\n            if (config.testNsfwLambda && image) {\n              imageService.predictNsfwLambda(image).then(\n                (result: any) => {\n                  if (\n                    Object.prototype.hasOwnProperty.call(\n                      result,\n                      'StatusCode'\n                    ) &&\n                    result.StatusCode === 200\n                  ) {\n                    const payload = JSON.parse(result.Payload);\n                    if (payload.statusCode === 200) {\n                      const predict = JSON.parse(payload.body);\n                      if (\n                        Object.prototype.hasOwnProperty.call(\n                          predict,\n                          'className'\n                        )\n                      ) {\n                        const isNsfw =\n                          predict.className === 'Porn' ||\n                          predict.className === 'Hentai';\n                        comments.updateNsfw(replyId, isNsfw);\n                      }\n                    }\n                  }\n                },\n                (err: any) => {}\n              );\n            }\n\n            // Add tags\n            for (let index = 0; index < tagsList.length; index++) {\n              try {\n                const account = await accounts.getAccountByUsername(\n                  tagsList[index].username\n                );\n                await tags.addTag(\n                  account[0].id,\n                  reply[0].id,\n                  Math.min(tagsList[index].offset, content.length)\n                );\n                await notifications.addReplyNotification(\n                  accountId,\n                  account[0].id,\n                  reply[0].post_id,\n                  reply[0].parent_id,\n                  reply[0].id\n                );\n              } catch (err) {\n                return next(new CommentsError.AddComment(500));\n              }\n            }\n\n            // add tags to content\n            await commentsService\n              .getTags(reply, accountId)\n              .then((taggedComments: any) => {\n                reply = taggedComments;\n              });\n\n            posts.getPostCreator(postId).then(\n              async (postCreator: any) => {\n                await commentsService.addProfilePicture(\n                  reply,\n                  postCreator[0].account_id\n                );\n                const response = {\n                  postId: postId,\n                  commentId: commentId,\n                  reply: reply[0]\n                };\n                res.status(200).json(response);\n              },\n              (err: any) => {\n                return next(new CommentsError.AddComment(500));\n              }\n            );\n          },\n          (err: any) => {\n            return next(new CommentsError.AddComment(500));\n          }\n        );\n    });\n  })\n);\n\n// Delete a comment\nrouter.delete(\n  '/:postId/:commentId',\n  rateLimiter.genericCommentLimiter,\n  function (req: any, res: any, next: any) {\n    if (!req.authenticated) {\n      return next(new AuthenticationError.AuthenticationError(401));\n    }\n\n    if (authorization.checkRole(req.user, [roles.guest])) {\n      return next(new CommentsError.DeleteComment(500));\n    }\n\n    const postId = req.params.postId;\n    const commentId = req.params.commentId;\n    const accountId = req.user.id;\n\n    comments.checkOwned(postId, accountId).then(\n      (owned: boolean) => {\n        if (\n          owned ||\n          authorization.checkRole(req.user, [roles.owner, roles.admin])\n        ) {\n          comments.deleteCommentById(commentId).then(\n            (rows: any) => {\n              comments.deleteReplyByParentId(commentId).then(\n                (rows: any) => {\n                  const response = { postId: postId, commentId: commentId };\n                  res.status(200).json(response);\n                },\n                (err: any) => {\n                  return next(new CommentsError.DeleteComment(500));\n                }\n              );\n            },\n            (err: any) => {\n              return next(new CommentsError.DeleteComment(500));\n            }\n          );\n        } else {\n          return next(new CommentsError.DeleteComment(500));\n        }\n      },\n      (err: any) => {\n        return next(new CommentsError.DeleteComment(500));\n      }\n    );\n  }\n);\n\n// Delete a reply\nrouter.delete(\n  '/:postId/:parentId/:commentId',\n  rateLimiter.genericCommentLimiter,\n  function (req: any, res: any, next: any) {\n    if (!req.authenticated) {\n      return next(new AuthenticationError.AuthenticationError(401));\n    }\n\n    if (authorization.checkRole(req.user, [roles.guest])) {\n      return next(new CommentsError.DeleteReply(500));\n    }\n\n    const postId = req.params.postId;\n    const parentId = req.params.parentId;\n    const commentId = req.params.commentId;\n    const accountId = req.user.id;\n\n    comments.checkOwned(postId, accountId).then(\n      (owned: boolean) => {\n        if (\n          owned ||\n          authorization.checkRole(req.user, [roles.owner, roles.admin])\n        ) {\n          comments.deleteCommentById(commentId).then(\n            (rows: any) => {\n              const response = {\n                postId: postId,\n                parentId: parentId,\n                commentId: commentId\n              };\n              res.status(200).json(response);\n            },\n            (err: any) => {\n              return next(new CommentsError.DeleteReply(500));\n            }\n          );\n        } else {\n          return next(new CommentsError.DeleteReply(500));\n        }\n      },\n      (err: any) => {\n        return next(new CommentsError.DeleteReply(500));\n      }\n    );\n  }\n);\n\n// Like a comment\nrouter.put(\n  '/:postId/:commentId/like',\n  rateLimiter.genericCommentLimiter,\n  function (req: any, res: any, next: any) {\n    if (!req.authenticated) {\n      return next(new AuthenticationError.AuthenticationError(401));\n    }\n\n    if (authorization.checkRole(req.user, [roles.guest])) {\n      return next(new CommentsError.LikeComment(500));\n    }\n\n    const postId = req.params.postId;\n    const commentId = req.params.commentId;\n    const accountId = req.user.id;\n\n    comments.likeComment(commentId, accountId).then(\n      (rows: any) => {\n        const response = { postId: postId, commentId: commentId };\n        res.status(200).json(response);\n      },\n      (err: any) => {\n        return next(new CommentsError.LikeComment(500));\n      }\n    );\n  }\n);\n\n// Dislike a comment\nrouter.put(\n  '/:postId/:commentId/dislike',\n  rateLimiter.genericCommentLimiter,\n  function (req: any, res: any, next: any) {\n    if (!req.authenticated) {\n      return next(new AuthenticationError.AuthenticationError(401));\n    }\n\n    if (authorization.checkRole(req.user, [roles.guest])) {\n      return next(new CommentsError.DislikeComment(500));\n    }\n\n    const postId = req.params.postId;\n    const commentId = req.params.commentId;\n    const accountId = req.user.id;\n\n    comments.dislikeComment(commentId, accountId).then(\n      (rows: any) => {\n        const response = { postId: postId, commentId: commentId };\n        res.status(200).json(response);\n      },\n      (err: any) => {\n        return next(new CommentsError.DislikeComment(500));\n      }\n    );\n  }\n);\n\n// remove like / dislike from comment\nrouter.put(\n  '/:postId/:commentId/unrated',\n  rateLimiter.genericCommentLimiter,\n  function (req: any, res: any, next: any) {\n    if (!req.authenticated) {\n      return next(new AuthenticationError.AuthenticationError(401));\n    }\n\n    if (authorization.checkRole(req.user, [roles.guest])) {\n      return next(new CommentsError.UnratedComment(500));\n    }\n\n    const postId = req.params.postId;\n    const commentId = req.params.commentId;\n    const accountId = req.user.id;\n\n    comments.unratedComment(commentId, accountId).then(\n      (rows: any) => {\n        const response = { postId: postId, commentId: commentId };\n        res.status(200).json(response);\n      },\n      (err: any) => {\n        return next(new CommentsError.UnratedComment(500));\n      }\n    );\n  }\n);\n\n// Like a reply\nrouter.put(\n  '/:postId/:parentId/:commentId/like',\n  rateLimiter.genericCommentLimiter,\n  function (req: any, res: any, next: any) {\n    if (!req.authenticated) {\n      return next(new AuthenticationError.AuthenticationError(401));\n    }\n\n    if (authorization.checkRole(req.user, [roles.guest])) {\n      return next(new CommentsError.LikeReply(500));\n    }\n\n    const postId = req.params.postId;\n    const parentId = req.params.parentId;\n    const commentId = req.params.commentId;\n    const accountId = req.user.id;\n\n    comments.likeComment(commentId, accountId).then(\n      (rows: any) => {\n        const response = {\n          postId: postId,\n          parentId: parentId,\n          commentId: commentId\n        };\n        res.status(200).json(response);\n      },\n      (err: any) => {\n        return next(new CommentsError.LikeReply(500));\n      }\n    );\n  }\n);\n\n// Dislike a reply\nrouter.put(\n  '/:postId/:parentId/:commentId/dislike',\n  rateLimiter.genericCommentLimiter,\n  function (req: any, res: any, next: any) {\n    if (!req.authenticated) {\n      return next(new AuthenticationError.AuthenticationError(401));\n    }\n\n    if (authorization.checkRole(req.user, [roles.guest])) {\n      return next(new CommentsError.DislikeReply(500));\n    }\n\n    const postId = req.params.postId;\n    const parentId = req.params.parentId;\n    const commentId = req.params.commentId;\n    const accountId = req.user.id;\n\n    comments.dislikeComment(commentId, accountId).then(\n      (rows: any) => {\n        const response = {\n          postId: postId,\n          parentId: parentId,\n          commentId: commentId\n        };\n        res.status(200).json(response);\n      },\n      (err: any) => {\n        return next(new CommentsError.DislikeReply(500));\n      }\n    );\n  }\n);\n\n// remove like / dislike from reply\nrouter.put(\n  '/:postId/:parentId/:commentId/unrated',\n  rateLimiter.genericCommentLimiter,\n  function (req: any, res: any, next: any) {\n    if (!req.authenticated) {\n      return next(new AuthenticationError.AuthenticationError(401));\n    }\n\n    if (authorization.checkRole(req.user, [roles.guest])) {\n      return next(new CommentsError.UnratedComment(500));\n    }\n\n    const postId = req.params.postId;\n    const parentId = req.params.parentId;\n    const commentId = req.params.commentId;\n    const accountId = req.user.id;\n\n    comments.unratedComment(commentId, accountId).then(\n      (rows: any) => {\n        const response = {\n          postId: postId,\n          parentId: parentId,\n          commentId: commentId\n        };\n        res.status(200).json(response);\n      },\n      (err: any) => {\n        return next(new CommentsError.UnratedComment(500));\n      }\n    );\n  }\n);\n\n// Report a comment\nrouter.put(\n  '/:postId/:commentId/report',\n  rateLimiter.genericCommentLimiter,\n  function (req: any, res: any, next: any) {\n    if (!req.authenticated) {\n      return next(new AuthenticationError.AuthenticationError(401));\n    }\n\n    if (authorization.checkRole(req.user, [roles.guest])) {\n      return next(new CommentsError.ReportComment(500));\n    }\n\n    const postId = req.params.postId;\n    const commentId = req.params.commentId;\n    const accountId = req.user.id;\n    const { content, category } = req.body;\n\n    reports\n      .addCommentReport(postId, commentId, accountId, content, category)\n      .then(\n        (rows: any) => {\n          res.status(200).send({});\n        },\n        (err: any) => {\n          return next(new CommentsError.ReportComment(500));\n        }\n      );\n  }\n);\n\nexport default router;\n"],"file":"comments.js"}