{"version":3,"sources":["../../../src/app/routes/posts.ts"],"names":["express","router","Router","uuid","posts","reports","postsService","locationsService","imageService","authorization","singleUpload","upload","single","PostsError","ReportError","AuthenticationError","ErrorHandler","rateLimiter","POSTS_CONSTANTS","REPORT_CONSTANTS","roles","config","use","timeLog","req","res","next","get","genericPostLimiter","catchAsync","authenticated","accountId","user","id","latitude","Number","query","longitude","location","sort","offset","limit","date","getPosts","then","rows","addDistanceToRows","response","status","json","err","GetPosts","post","createPostLimiter","verified","VerifyError","checkRole","guest","PostError","postId","v4","filename","PostImage","JSON","parse","body","content","image","file","trim","split","length","MAX_LINE_LENGTH","InvalidPostLineLength","NoPostContent","contentError","validContent","link","generateLink","imageNsfw","testNsfwLocal","predictNsfw","getGeolocation","geolocation","addPost","testNsfwLambda","predictNsfwLambda","result","Object","prototype","hasOwnProperty","call","StatusCode","payload","Payload","statusCode","predict","isNsfw","className","updateNsfw","put","LikePost","params","likePost","DislikePost","dislikePost","UnratedPost","unratedPost","delete","DeletePost","checkOwned","owned","owner","admin","deletePost","category","MIN_CONTENT_LENGTH","MAX_CONTENT_LENGTH","ReportLengthError","addPostReport","send","before","Date","after","getPostsActivity","activity","size","cursor","creation_date","PostActivity","postLink","getPostByLink","GetSinglePost"],"mappings":"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","sourcesContent":["import express from 'express';\nconst router = express.Router();\n\nimport uuid from 'uuid';\n\n// db\nimport posts from '@db/posts';\nimport reports from '@db/reports';\n\n// services\nimport postsService from '@services/posts';\nimport locationsService from '@services/locations';\nimport imageService from '@services/image';\nimport authorization from '@services/authorization/authorization';\nconst singleUpload = imageService.upload.single('image');\n\n// errors\nimport * as PostsError from '@exceptions/posts';\nimport * as ReportError from '@exceptions/report';\nimport * as AuthenticationError from '@exceptions/authentication';\nimport ErrorHandler from '@helpers/errorHandler';\n\n// ratelimiter\nimport rateLimiter from '@helpers/rateLimiter';\n\n// constants\nimport { POSTS_CONSTANTS } from '@constants/posts';\nimport { REPORT_CONSTANTS } from '@constants/report';\nimport roles from '@services/authorization/roles';\n\n// config\nimport config from '@config/config';\n\nrouter.use(function timeLog(req: any, res: any, next: any) {\n  next();\n});\n\n// Get all posts\nrouter.get(\n  '/',\n  rateLimiter.genericPostLimiter,\n  ErrorHandler.catchAsync(async function (req: any, res: any, next: any) {\n    // You must have an account to get all posts\n    if (!req.authenticated) {\n      return next(new AuthenticationError.AuthenticationError(401));\n    }\n\n    const accountId = req.user.id;\n\n    // latitude and longitude are optional if location is global\n    const latitude = Number(req.query.latitude);\n    const longitude = Number(req.query.longitude);\n\n    const location = req.query.location;\n    const sort = req.query.sort;\n    const offset = Number(req.query.offset);\n    const limit = Number(req.query.limit);\n    const date = req.query.date || null;\n\n    posts\n      .getPosts(\n        accountId,\n        sort,\n        location,\n        latitude,\n        longitude,\n        offset,\n        limit,\n        date\n      )\n      .then(\n        (rows: any) => {\n          // add the distance\n          rows = locationsService.addDistanceToRows(\n            rows,\n            latitude,\n            longitude,\n            true\n          );\n\n          const response = { posts: rows };\n          res.status(200).json(response);\n        },\n        (err: any) => {\n          return next(new PostsError.GetPosts(500));\n        }\n      );\n  })\n);\n\n// Add a post\nrouter.post(\n  '/',\n  rateLimiter.createPostLimiter,\n  ErrorHandler.catchAsync(async (req: any, res: any, next: any) => {\n    // You must have an account to make a post\n    if (!req.authenticated) {\n      return next(new AuthenticationError.AuthenticationError(401));\n    }\n\n    // You must be verified to make a post\n    if (!req.verified) {\n      return next(new AuthenticationError.VerifyError(400));\n    }\n\n    if (authorization.checkRole(req.user, [roles.guest])) {\n      return next(new PostsError.PostError(500));\n    }\n\n    const accountId = req.user.id;\n    const postId = uuid.v4();\n\n    // set the filename for aws s3 bucket\n    req.filename = postId;\n\n    singleUpload(req, res, async function (err: any) {\n      // error uploading image\n      if (err) {\n        return next(new PostsError.PostImage(422));\n      }\n\n      const json = JSON.parse(req.body.json);\n      let content = json.content;\n      const location = json.location;\n      const image = req.file ? req.file.location : null;\n\n      // remove leading and trailing whitespaces\n      content = content.trim();\n\n      // check if line length matches\n      if (\n        content.split(/\\r\\n|\\r|\\n/).length > POSTS_CONSTANTS.MAX_LINE_LENGTH\n      ) {\n        return next(\n          new PostsError.InvalidPostLineLength(\n            400,\n            POSTS_CONSTANTS.MAX_LINE_LENGTH\n          )\n        );\n      }\n\n      // You must either have some text or an image\n      if (content.length == 0 && !image) {\n        return next(new PostsError.NoPostContent(400));\n      }\n\n      const contentError = postsService.validContent(content);\n      if (contentError) {\n        return next(contentError);\n      }\n\n      const link = await postsService.generateLink();\n\n      let imageNsfw = false;\n      if (config.testNsfwLocal && image) {\n        try {\n          imageNsfw = await imageService.predictNsfw(image);\n        } catch (err) {\n          // err\n        }\n      }\n\n      locationsService\n        .getGeolocation(location.latitude, location.longitude)\n        .then(\n          (geolocation: string) => {\n            posts\n              .addPost(\n                postId,\n                content,\n                location,\n                image,\n                imageNsfw,\n                link,\n                accountId,\n                geolocation\n              )\n              .then(\n                (rows: any) => {\n                  // async test nsfw\n                  if (config.testNsfwLambda && image) {\n                    imageService.predictNsfwLambda(image).then(\n                      (result: any) => {\n                        if (\n                          Object.prototype.hasOwnProperty.call(\n                            result,\n                            'StatusCode'\n                          ) &&\n                          result.StatusCode === 200\n                        ) {\n                          const payload = JSON.parse(result.Payload);\n                          if (payload.statusCode === 200) {\n                            const predict = JSON.parse(payload.body);\n                            if (\n                              Object.prototype.hasOwnProperty.call(\n                                predict,\n                                'className'\n                              )\n                            ) {\n                              const isNsfw =\n                                predict.className === 'Porn' ||\n                                predict.className === 'Hentai';\n                              posts.updateNsfw(postId, isNsfw);\n                            }\n                          }\n                        }\n                      },\n                      (err: any) => {}\n                    );\n                  }\n\n                  rows = locationsService.addDistanceToRows(\n                    rows,\n                    location.latitude,\n                    location.longitude,\n                    true\n                  );\n                  const response = { post: rows[0] };\n                  res.status(200).json(response);\n                },\n                (err: any) => {\n                  return next(new PostsError.PostError(500));\n                }\n              );\n          },\n          (err: any) => {\n            return next(new PostsError.PostError(500));\n          }\n        );\n    });\n  })\n);\n\n// Like a post\nrouter.put(\n  '/:postId/like',\n  rateLimiter.genericPostLimiter,\n  function (req: any, res: any, next: any) {\n    // You must have an account to like a post\n    if (!req.authenticated) {\n      return next(new AuthenticationError.AuthenticationError(401));\n    }\n\n    if (authorization.checkRole(req.user, [roles.guest])) {\n      return next(new PostsError.LikePost(500));\n    }\n\n    const postId = req.params.postId;\n    const accountId = req.user.id;\n\n    posts.likePost(postId, accountId).then(\n      (rows: any) => {\n        const response = { postId: postId };\n        res.status(200).json(response);\n      },\n      (err: any) => {\n        return next(new PostsError.LikePost(500));\n      }\n    );\n  }\n);\n\n// Dislike a post\nrouter.put(\n  '/:postId/dislike',\n  rateLimiter.genericPostLimiter,\n  function (req: any, res: any, next: any) {\n    // You must have an account to dislike a post\n    if (!req.authenticated) {\n      return next(new AuthenticationError.AuthenticationError(401));\n    }\n\n    if (authorization.checkRole(req.user, [roles.guest])) {\n      return next(new PostsError.DislikePost(500));\n    }\n\n    const postId = req.params.postId;\n    const accountId = req.user.id;\n\n    posts.dislikePost(postId, accountId).then(\n      (rows: any) => {\n        const response = { postId: postId };\n        res.status(200).json(response);\n      },\n      (err: any) => {\n        return next(new PostsError.DislikePost(500));\n      }\n    );\n  }\n);\n\n// remove like / dislike from post\nrouter.put(\n  '/:postId/unrated',\n  rateLimiter.genericPostLimiter,\n  function (req: any, res: any, next: any) {\n    if (!req.authenticated) {\n      return next(new AuthenticationError.AuthenticationError(401));\n    }\n\n    if (authorization.checkRole(req.user, [roles.guest])) {\n      return next(new PostsError.UnratedPost(500));\n    }\n\n    const postId = req.params.postId;\n    const accountId = req.user.id;\n\n    posts.unratedPost(postId, accountId).then(\n      (rows: any) => {\n        const response = { postId: postId };\n        res.status(200).json(response);\n      },\n      (err: any) => {\n        return next(new PostsError.UnratedPost(500));\n      }\n    );\n  }\n);\n\n// Delete a post\nrouter.delete(\n  '/:postId',\n  rateLimiter.genericPostLimiter,\n  function (req: any, res: any, next: any) {\n    // You must have an account to delete a post\n    if (!req.authenticated) {\n      return next(new AuthenticationError.AuthenticationError(401));\n    }\n\n    if (authorization.checkRole(req.user, [roles.guest])) {\n      return next(new PostsError.DeletePost(500));\n    }\n\n    const postId = req.params.postId;\n    const accountId = req.user.id;\n\n    posts.checkOwned(postId, accountId).then(\n      (owned: boolean) => {\n        if (\n          owned ||\n          authorization.checkRole(req.user, [roles.owner, roles.admin])\n        ) {\n          posts.deletePost(postId).then(\n            (rows: any) => {\n              const response = { postId: postId };\n              res.status(200).json(response);\n            },\n            (err: any) => {\n              return next(new PostsError.DeletePost(500));\n            }\n          );\n        } else {\n          return next(new PostsError.DeletePost(500));\n        }\n      },\n      (err: any) => {\n        return next(new PostsError.DeletePost(500));\n      }\n    );\n  }\n);\n\n// report a post\nrouter.put(\n  '/:postId/report',\n  rateLimiter.genericPostLimiter,\n  function (req: any, res: any, next: any) {\n    // You must have an account to report something\n    if (!req.authenticated) {\n      return next(new AuthenticationError.AuthenticationError(401));\n    }\n\n    if (authorization.checkRole(req.user, [roles.guest])) {\n      return next(new ReportError.ReportError(500));\n    }\n\n    const postId = req.params.postId;\n    const accountId = req.user.id;\n    const { content, category } = req.body;\n\n    if (\n      content.length < REPORT_CONSTANTS.MIN_CONTENT_LENGTH ||\n      content.length > REPORT_CONSTANTS.MAX_CONTENT_LENGTH\n    ) {\n      return next(\n        new ReportError.ReportLengthError(\n          400,\n          REPORT_CONSTANTS.MIN_CONTENT_LENGTH,\n          REPORT_CONSTANTS.MAX_CONTENT_LENGTH\n        )\n      );\n    }\n\n    reports.addPostReport(postId, accountId, content, category).then(\n      (rows: any) => {\n        res.status(200).send({});\n      },\n      (err: any) => {\n        return next(new ReportError.ReportError(500));\n      }\n    );\n  }\n);\n\n// Get post activity\nrouter.get(\n  '/activity',\n  rateLimiter.genericPostLimiter,\n  function (req: any, res: any, next: any) {\n    // You must have an account to see activity\n    if (!req.authenticated) {\n      return next(new AuthenticationError.AuthenticationError(401));\n    }\n\n    const accountId = req.user.id;\n\n    const before = req.query.before ? new Date(req.query.before) : null;\n    const after = req.query.after ? new Date(req.query.after) : null;\n    const limit = Number(req.query.limit);\n    const latitude = Number(req.query.latitude);\n    const longitude = Number(req.query.longitude);\n\n    posts.getPostsActivity(accountId, before, after, limit).then(\n      (rows: any) => {\n        rows = locationsService.addDistanceToRows(\n          rows,\n          latitude,\n          longitude,\n          true\n        );\n        const response = {\n          activity: rows,\n          size: rows.length,\n          cursor: {\n            before: rows.length > 0 ? rows[0].creation_date : null,\n            after: rows.length > 0 ? rows[rows.length - 1].creation_date : null\n          }\n        };\n        res.status(200).json(response);\n      },\n      (err: any) => {\n        return next(new PostsError.PostActivity(500));\n      }\n    );\n  }\n);\n\n// Get a single post\nrouter.get(\n  '/:postLink',\n  rateLimiter.genericPostLimiter,\n  function (req: any, res: any, next: any) {\n    // getting individual posts does not need an account\n    const postLink = req.params.postLink;\n\n    // Optional - needed to supply distances\n    const latitude = Number(req.query.latitude);\n    const longitude = Number(req.query.longitude);\n\n    posts.getPostByLink(postLink, req.authenticated ? req.user.id : null).then(\n      (rows: any) => {\n        if (rows.length < 1) {\n          return next(new PostsError.GetSinglePost(500));\n        }\n\n        rows = locationsService.addDistanceToRows(\n          rows,\n          latitude,\n          longitude,\n          true\n        );\n        const response = { post: rows[0] };\n        res.status(200).json(response);\n      },\n      (err: any) => {\n        return next(new PostsError.GetSinglePost(500));\n      }\n    );\n  }\n);\n\nexport default router;\n"],"file":"posts.js"}