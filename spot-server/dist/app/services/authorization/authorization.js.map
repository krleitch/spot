{"version":3,"sources":["../../../../src/app/services/authorization/authorization.ts"],"names":["checkRoleMiddleware","roles","req","res","next","user","status","send","hasRole","find","role","checkRole"],"mappings":"AAEA,KAAMA,CAAAA,mBAAmB,CAAIC,KAAD,EAA0B,CAACC,GAAD,CAAWC,GAAX,CAAqBC,IAArB,GAAmC,CACvF,GAAI,CAACF,GAAG,CAACG,IAAT,CAAe,CACb,MAAOF,CAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gBAArB,CACR,CAED,KAAMC,CAAAA,OAAO,CAAGP,KAAK,CAACQ,IAAN,CAAYC,IAAD,EAAUR,GAAG,CAACG,IAAJ,CAASK,IAAT,GAAkBA,IAAvC,CAAhB,CACA,GAAI,CAACF,OAAL,CAAc,CACZ,MAAOL,CAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gBAArB,CACR,CAED,MAAOH,CAAAA,IAAI,EACZ,CAXD,CAcA,QAASO,CAAAA,SAAT,CAAmBN,IAAnB,CAA8BJ,KAA9B,CAAoD,CAClD,MAAOA,CAAAA,KAAK,CAACQ,IAAN,CAAYC,IAAD,EAAUL,IAAI,CAACK,IAAL,GAAcA,IAAnC,CACR,CAED,cAAe,CAAEV,mBAAF,CAAuBW,SAAvB,CAAf","sourcesContent":["// Middleware used on routes\n// TODO these error msgs\nconst checkRoleMiddleware = (roles: Array<string>) => (req: any, res: any, next: any) => {\n  if (!req.user) {\n    return res.status(400).send('not authorized');\n  }\n\n  const hasRole = roles.find((role) => req.user.role === role);\n  if (!hasRole) {\n    return res.status(400).send('not authorized');\n  }\n\n  return next();\n};\n\n// Used within a function given a user\nfunction checkRole(user: any, roles: Array<string>) {\n  return roles.find((role) => user.role === role);\n}\n\nexport default { checkRoleMiddleware, checkRole };\n"],"file":"authorization.js"}