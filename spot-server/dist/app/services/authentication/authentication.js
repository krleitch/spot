const{randomBytes,pbkdf2Sync}=require("crypto");const jwt=require("jsonwebtoken");const request=require("request");const secret=require("@config/secret.json");const{OAuth2Client}=require("google-auth-library");const client=new OAuth2Client("805375534727-tsjtjhrf00a4hnvscrnejj5jaioo2nit.apps.googleusercontent.com");const passport=require("@services/authentication/passport");const accounts=require("@db/accounts");const AuthenticationError=require("@exceptions/authentication");const AUTH_CONSTANTS=require("@constants/authentication");const AUTHENTICATION_CONSTANTS=AUTH_CONSTANTS.AUTHENTICATION_CONSTANTS;function validUsername(username){if(username.length<AUTHENTICATION_CONSTANTS.MIN_USERNAME_LENGTH||username.length>AUTHENTICATION_CONSTANTS.MAX_USERNAME_LENGTH){return new AuthenticationError.UsernameLengthError(400,AUTHENTICATION_CONSTANTS.MIN_USERNAME_LENGTH,AUTHENTICATION_CONSTANTS.MAX_USERNAME_LENGTH)}const PATTERN=/^\w(?:\w*(?:['.-]\w+)?)*$/;if(username.match(PATTERN)==null){return new AuthenticationError.UsernameCharacterError(400)}return null}function validPassword(password){if(password.length<AUTHENTICATION_CONSTANTS.MIN_PASSWORD_LENGTH||password.length>AUTHENTICATION_CONSTANTS.MAX_PASSWORD_LENGTH){return new AuthenticationError.PasswordLengthError(400,AUTHENTICATION_CONSTANTS.MIN_PASSWORD_LENGTH,AUTHENTICATION_CONSTANTS.MAX_PASSWORD_LENGTH)}return null}function validEmail(email){const regex=/^\S+@\S+\.\S+$/;if(email.match(regex)==null){return new AuthenticationError.EmailInvalidError(400)}return null}function validPhone(phone){const regex=/^\s*(?:\+?(\d{1,3}))?[-. (]*(\d{3})[-. )]*(\d{3})[-. ]*(\d{4})(?: *x(\d+))?\s*$/;if(phone.match(regex)==null){return new AuthenticationError.PhoneInvalidError(400)}return null}const optionalAuth=function(req,res,next){passport.authenticate("jwt",{session:false},function(err,user,info){req.authenticated=!!user;req.verified=user?!!user.verified_date:null;req.user=user||null;next()})(req,res,next)};const requiredAuth=function(req,res,next){passport.authenticate("jwt",{session:false},function(err,user,info){req.authenticated=!!user;req.verified=user?!!user.verified_date:null;req.user=user||null;if(!req.authenticated){return next(new AuthenticationError.AuthenticationError(401))}else{next()}})(req,res,next)};const localAuth=function(req,res,next){passport.authenticate("local",{session:false},function(err,user,info){req.authenticated=!!user;req.verified=user?!!user.verified_date:null;req.user=user||null;if(user==false){return next(new AuthenticationError.UsernameOrPasswordError(401))}else{next()}})(req,res,next)};function generateSalt(){return randomBytes(128).toString("hex")}function hashPassword(password,salt){const iterations=10000;const hashLength=512;const digest="sha512";return pbkdf2Sync(password,salt,iterations,hashLength,digest).toString("hex")}function validatePassword(user,password){if(user===undefined)return false;const hashedPassword=hashPassword(password,user.salt);return hashedPassword===user.pass}function generateToken(user){return jwt.sign({id:user},secret.secret,{expiresIn:"7d"})}function isValidToken(token){const expire=AUTHENTICATION_CONSTANTS.TOKEN_EXPIRE_TIME*60*1000;const now=new Date;return now.getTime()-new Date(token.creation_date).getTime()<=expire}async function createUsernameFromEmail(email){let username;if(email){const index=email.indexOf("@");username=email.substring(0,index)}else{username=null}if(!username){username="user"+(10000+Math.random()*(99999-10000)).toString()}let exists=await accounts.usernameExists(username);do{if(exists){username+=Math.floor(Math.random()*10).toString();exists=await accounts.usernameExists(username)}}while(exists);return username}function isValidAccountUpdateTime(time){const expire=AUTHENTICATION_CONSTANTS.ACCOUNT_UPDATE_TIMEOUT*60*60*1000;const now=new Date;return now.getTime()-new Date(time).getTime()>expire}function getFacebookDetails(accessToken){const url="https://graph.facebook.com/me?fields=id,email&access_token="+accessToken;return new Promise((resolve,reject)=>{request(url,function(error,response,body){if(error){return reject(error)}resolve({response:response,body:JSON.parse(body)})})})}function getFacebookId(accessToken){const url="https://graph.facebook.com/me?fields=id&access_token="+accessToken;return new Promise((resolve,reject)=>{request(url,function(error,response,body){if(error){return reject(error)}resolve({response:response,body:JSON.parse(body)})})})}async function verifyGoogleIdToken(accessToken){const ticket=await client.verifyIdToken({idToken:accessToken,audience:"773867677566-52gc54rg7909514ff2nvvi5oejlg0077.apps.googleusercontent.com"});return ticket}export default{generateSalt,hashPassword,validatePassword,generateToken,getFacebookDetails,getFacebookId,validUsername,validPassword,optionalAuth,requiredAuth,localAuth,validEmail,validPhone,isValidToken,createUsernameFromEmail,verifyGoogleIdToken,isValidAccountUpdateTime};
//# sourceMappingURL=authentication.js.map